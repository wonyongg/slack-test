name: Notify Slack for PR Review and Comments

on:
  pull_request:
    branches: [dev]
    types: [review_requested]

  issue_comment:
    types: [created]

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Wait for CI to pass (only for PR review_requested)
        if: github.event_name == 'pull_request'
        uses: lewagon/wait-on-check-action@v1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'CI'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

      - name: Send Slack notification for PR review
        if: github.event_name == 'pull_request'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          REVIEWER="@${{ github.event.requested_reviewer.login }}"

          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"🔔 *PR 리뷰 요청*\n*제목:* ${PR_TITLE}\n*작성자:* ${PR_AUTHOR}\n*리뷰어:* ${REVIEWER}\n*링크:* ${PR_URL}\"
          }" $SLACK_WEBHOOK_URL

      - name: Send Slack notification for PR comment
        if: github.event_name == 'issue_comment'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          COMMENT_AUTHOR="${{ github.event.comment.user.login }}"
          COMMENT_BODY="${{ github.event.comment.body }}"
          COMMENT_URL="${{ github.event.comment.html_url }}"

          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"💬 *@${COMMENT_AUTHOR}*님이 PR에 코멘트를 남겼어요:\n>${COMMENT_BODY}\n🔗 ${COMMENT_URL}\"
          }" $SLACK_WEBHOOK_URL
